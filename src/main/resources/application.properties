# Database configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USERNAME:quarkus}
quarkus.datasource.password=${DB_PASSWORD:quarkus123}

# Reactive datasource configuration 
quarkus.datasource.reactive.url=${DB_REACTIVE_URL:vertx-reactive:postgresql://localhost:5432/sensor_db}
quarkus.datasource.reactive.max-size=20
quarkus.hibernate-orm.schema-management.strategy=drop-and-create
quarkus.hibernate-orm.log.sql=false

# Disable all dev services to manage them manually with docker-compose
quarkus.devservices.enabled=false

# MQTT configuration (using SmallRye Reactive Messaging)
mqtt.container.name=${MQTT_CONTAINER_NAME:emqx-broker}
mp.messaging.incoming.sensors-in.connector=smallrye-mqtt-hivemq
mp.messaging.incoming.sensors-in.host=${MQTT_HOST:localhost}
mp.messaging.incoming.sensors-in.port=${MQTT_PORT:1883}
mp.messaging.incoming.sensors-in.username=${MQTT_USER:admin}
mp.messaging.incoming.sensors-in.password=${MQTT_PASS:admin123}
mp.messaging.incoming.sensors-in.topic=sensors/+/telemetry

mp.messaging.outgoing.sensors-out.connector=smallrye-mqtt-hivemq
mp.messaging.outgoing.sensors-out.host=${MQTT_HOST:localhost}
mp.messaging.outgoing.sensors-out.port=${MQTT_PORT:1883}
mp.messaging.outgoing.sensors-out.username=${MQTT_USER:admin}
mp.messaging.outgoing.sensors-out.password=${MQTT_PASS:admin123}

# Security Configuration
app.security.bcrypt.salt-rounds=${BCRYPT_SALT_ROUNDS:12}
app.security.bcrypt.custom-salt=${BCRYPT_CUSTOM_SALT:$2a$12$abcdefghijklmnopqrstuv}
app.security.secret-key=${APP_SECRET_KEY:default-secret-key}

# Console logging
quarkus.log.level=INFO
quarkus.log.console.enable=true
quarkus.log.console.level=INFO

# EMQX Configuration
mqtt.broker.type=emqx
mqtt.broker.host=localhost
mqtt.broker.port=1883
mqtt.broker.api.port=8080

# HTTP Server Configuration for MQTT Auth
quarkus.http.port=8000
quarkus.http.host=0.0.0.0

# CORS Configuration for emqx webhooks
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with

# ThÃªm logging cho MQTT
quarkus.log.category."io.smallrye.reactive.messaging".level=DEBUG
quarkus.log.category."org.eclipse.paho".level=DEBUG
quarkus.log.category."com.hivemq".level=DEBUG