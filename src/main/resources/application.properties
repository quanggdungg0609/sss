# Database configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USERNAME:quarkus}
quarkus.datasource.password=${DB_PASSWORD:quarkus123}

# JDBC datasource configuration (cho Hibernate ORM)
quarkus.datasource.jdbc.url=${DB_JDBC_URL:jdbc:postgresql://localhost:5432/sensor_db}
quarkus.datasource.jdbc.max-size=16

# Reactive datasource configuration (cho Hibernate Reactive)
quarkus.datasource.reactive.url=${DB_REACTIVE_URL:postgresql://localhost:5432/sensor_db}
quarkus.datasource.reactive.max-size=20

# Hibernate ORM cho việc tạo schema
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true

# Disable all dev services to manage them manually with docker-compose
quarkus.devservices.enabled=false

# MQTT configuration (using SmallRye Reactive Messaging)
mqtt.container.name=${MQTT_CONTAINER_NAME:vernemq-broker}
mp.messaging.incoming.sensor-data.connector=smallrye-mqtt
mp.messaging.incoming.sensor-data.host=${MQTT_HOST:localhost}
mp.messaging.incoming.sensor-data.port=${MQTT_PORT:1883}
mp.messaging.incoming.sensor-data.username=${MQTT_USER:admin}
mp.messaging.incoming.sensor-data.password=${MQTT_PASS:password}
mp.messaging.incoming.sensor-data.topic=sensors/+/data

mp.messaging.outgoing.commands.connector=smallrye-mqtt
mp.messaging.outgoing.commands.host=${MQTT_HOST:localhost}
mp.messaging.outgoing.commands.port=${MQTT_PORT:1883}
mp.messaging.outgoing.commands.username=${MQTT_USER:admin}
mp.messaging.outgoing.commands.password=${MQTT_PASS:password}
mp.messaging.outgoing.commands.topic=commands

# Security Configuration
app.security.bcrypt.salt-rounds=${BCRYPT_SALT_ROUNDS:12}
app.security.bcrypt.custom-salt=${BCRYPT_CUSTOM_SALT:$2a$12$abcdefghijklmnopqrstuv}
app.security.secret-key=${APP_SECRET_KEY:default-secret-key}

# Console logging
quarkus.log.level=INFO
quarkus.log.console.enable=true
quarkus.log.console.level=INFO

# VerneMQ Configuration
mqtt.broker.type=vernemq
mqtt.broker.host=localhost
mqtt.broker.port=1883
mqtt.broker.api.port=8080

# HTTP Server Configuration for MQTT Auth
quarkus.http.port=8000
quarkus.http.host=0.0.0.0

# CORS Configuration for VerneMQ webhooks
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with